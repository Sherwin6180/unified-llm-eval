{"reason":"compiler-artifact","package_id":"path+file:///scratch/shared_dir/xinyu/workdir/unified-llm-eval/vendor/HumanEval/human_eval/rust#0.1.0","manifest_path":"/scratch/shared_dir/xinyu/workdir/unified-llm-eval/vendor/HumanEval/human_eval/rust/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rust","src_path":"/scratch/shared_dir/xinyu/workdir/unified-llm-eval/vendor/HumanEval/human_eval/rust/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/scratch/shared_dir/xinyu/workdir/unified-llm-eval/vendor/HumanEval/human_eval/rust/target/debug/deps/librust-e70bbbc094327dd8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-message","package_id":"path+file:///scratch/shared_dir/xinyu/workdir/unified-llm-eval/vendor/HumanEval/human_eval/rust#0.1.0","manifest_path":"/scratch/shared_dir/xinyu/workdir/unified-llm-eval/vendor/HumanEval/human_eval/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"humaneval_65_circular_shift","src_path":"/scratch/shared_dir/xinyu/workdir/unified-llm-eval/vendor/HumanEval/human_eval/rust/src/bin/humaneval_65_circular_shift.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n  --> src/bin/humaneval_65_circular_shift.rs:14:45\n   |\n14 |         let (front, back) = digits.split_at(digits.len() as isize + shift);\n   |                                    -------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `usize`, found `isize`\n   |                                    |\n   |                                    arguments to this method are incorrect\n   |\nnote: method defined here\n  --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/core/src/slice/mod.rs:1946:18\nhelp: you can convert an `isize` to a `usize` and panic if the converted value doesn't fit\n   |\n14 |         let (front, back) = digits.split_at((digits.len() as isize + shift).try_into().unwrap());\n   |                                             +                             +++++++++++++++++++++\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"method defined here","rendered":null,"spans":[{"byte_end":72144,"byte_start":72136,"column_end":26,"column_start":18,"expansion":null,"file_name":"/rustc/1159e78c4747b02ef996e55082b704c09b970588/library/core/src/slice/mod.rs","is_primary":true,"label":null,"line_end":1946,"line_start":1946,"suggested_replacement":null,"suggestion_applicability":null,"text":[]}]},{"children":[],"code":null,"level":"help","message":"you can convert an `isize` to a `usize` and panic if the converted value doesn't fit","rendered":null,"spans":[{"byte_end":511,"byte_start":511,"column_end":45,"column_start":45,"expansion":null,"file_name":"src/bin/humaneval_65_circular_shift.rs","is_primary":true,"label":null,"line_end":14,"line_start":14,"suggested_replacement":"(","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":45,"highlight_start":45,"text":"        let (front, back) = digits.split_at(digits.len() as isize + shift);"}]},{"byte_end":540,"byte_start":540,"column_end":74,"column_start":74,"expansion":null,"file_name":"src/bin/humaneval_65_circular_shift.rs","is_primary":true,"label":null,"line_end":14,"line_start":14,"suggested_replacement":").try_into().unwrap()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":74,"highlight_start":74,"text":"        let (front, back) = digits.split_at(digits.len() as isize + shift);"}]}]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":540,"byte_start":511,"column_end":74,"column_start":45,"expansion":null,"file_name":"src/bin/humaneval_65_circular_shift.rs","is_primary":true,"label":"expected `usize`, found `isize`","line_end":14,"line_start":14,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":74,"highlight_start":45,"text":"        let (front, back) = digits.split_at(digits.len() as isize + shift);"}]},{"byte_end":510,"byte_start":502,"column_end":44,"column_start":36,"expansion":null,"file_name":"src/bin/humaneval_65_circular_shift.rs","is_primary":false,"label":"arguments to this method are incorrect","line_end":14,"line_start":14,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":44,"highlight_start":36,"text":"        let (front, back) = digits.split_at(digits.len() as isize + shift);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///scratch/shared_dir/xinyu/workdir/unified-llm-eval/vendor/HumanEval/human_eval/rust#0.1.0","manifest_path":"/scratch/shared_dir/xinyu/workdir/unified-llm-eval/vendor/HumanEval/human_eval/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"humaneval_65_circular_shift","src_path":"/scratch/shared_dir/xinyu/workdir/unified-llm-eval/vendor/HumanEval/human_eval/rust/src/bin/humaneval_65_circular_shift.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"For more information about this error, try `rustc --explain E0308`.\n","$message_type":"diagnostic","children":[],"code":null,"level":"failure-note","message":"For more information about this error, try `rustc --explain E0308`.","spans":[]}}
{"reason":"build-finished","success":false}
