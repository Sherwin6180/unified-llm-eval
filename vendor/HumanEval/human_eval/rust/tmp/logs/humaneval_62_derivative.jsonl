{"reason":"compiler-artifact","package_id":"path+file:///scratch/shared_dir/xinyu/workdir/unified-llm-eval/vendor/HumanEval/human_eval/rust#0.1.0","manifest_path":"/scratch/shared_dir/xinyu/workdir/unified-llm-eval/vendor/HumanEval/human_eval/rust/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rust","src_path":"/scratch/shared_dir/xinyu/workdir/unified-llm-eval/vendor/HumanEval/human_eval/rust/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/scratch/shared_dir/xinyu/workdir/unified-llm-eval/vendor/HumanEval/human_eval/rust/target/debug/deps/librust-e70bbbc094327dd8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-message","package_id":"path+file:///scratch/shared_dir/xinyu/workdir/unified-llm-eval/vendor/HumanEval/human_eval/rust#0.1.0","manifest_path":"/scratch/shared_dir/xinyu/workdir/unified-llm-eval/vendor/HumanEval/human_eval/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"humaneval_62_derivative","src_path":"/scratch/shared_dir/xinyu/workdir/unified-llm-eval/vendor/HumanEval/human_eval/rust/src/bin/humaneval_62_derivative.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n  --> src/bin/humaneval_62_derivative.rs:13:29\n   |\n13 |         result.push(xs[i] * i);\n   |                             ^ expected `isize`, found `usize`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":398,"byte_start":397,"column_end":30,"column_start":29,"expansion":null,"file_name":"src/bin/humaneval_62_derivative.rs","is_primary":true,"label":"expected `isize`, found `usize`","line_end":13,"line_start":13,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":30,"highlight_start":29,"text":"        result.push(xs[i] * i);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///scratch/shared_dir/xinyu/workdir/unified-llm-eval/vendor/HumanEval/human_eval/rust#0.1.0","manifest_path":"/scratch/shared_dir/xinyu/workdir/unified-llm-eval/vendor/HumanEval/human_eval/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"humaneval_62_derivative","src_path":"/scratch/shared_dir/xinyu/workdir/unified-llm-eval/vendor/HumanEval/human_eval/rust/src/bin/humaneval_62_derivative.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"error[E0277]: cannot multiply `isize` by `usize`\n  --> src/bin/humaneval_62_derivative.rs:13:27\n   |\n13 |         result.push(xs[i] * i);\n   |                           ^ no implementation for `isize * usize`\n   |\n   = help: the trait `Mul<usize>` is not implemented for `isize`\n   = help: the following other types implement trait `Mul<Rhs>`:\n             `&isize` implements `Mul<isize>`\n             `&isize` implements `Mul`\n             `isize` implements `Mul<&isize>`\n             `isize` implements `Mul`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"the trait `Mul<usize>` is not implemented for `isize`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"the following other types implement trait `Mul<Rhs>`:\n  `&isize` implements `Mul<isize>`\n  `&isize` implements `Mul`\n  `isize` implements `Mul<&isize>`\n  `isize` implements `Mul`","rendered":null,"spans":[]}],"code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","message":"cannot multiply `isize` by `usize`","spans":[{"byte_end":396,"byte_start":395,"column_end":28,"column_start":27,"expansion":null,"file_name":"src/bin/humaneval_62_derivative.rs","is_primary":true,"label":"no implementation for `isize * usize`","line_end":13,"line_start":13,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":28,"highlight_start":27,"text":"        result.push(xs[i] * i);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///scratch/shared_dir/xinyu/workdir/unified-llm-eval/vendor/HumanEval/human_eval/rust#0.1.0","manifest_path":"/scratch/shared_dir/xinyu/workdir/unified-llm-eval/vendor/HumanEval/human_eval/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"humaneval_62_derivative","src_path":"/scratch/shared_dir/xinyu/workdir/unified-llm-eval/vendor/HumanEval/human_eval/rust/src/bin/humaneval_62_derivative.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"Some errors have detailed explanations: E0277, E0308.\n","$message_type":"diagnostic","children":[],"code":null,"level":"failure-note","message":"Some errors have detailed explanations: E0277, E0308.","spans":[]}}
{"reason":"compiler-message","package_id":"path+file:///scratch/shared_dir/xinyu/workdir/unified-llm-eval/vendor/HumanEval/human_eval/rust#0.1.0","manifest_path":"/scratch/shared_dir/xinyu/workdir/unified-llm-eval/vendor/HumanEval/human_eval/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"humaneval_62_derivative","src_path":"/scratch/shared_dir/xinyu/workdir/unified-llm-eval/vendor/HumanEval/human_eval/rust/src/bin/humaneval_62_derivative.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"For more information about an error, try `rustc --explain E0277`.\n","$message_type":"diagnostic","children":[],"code":null,"level":"failure-note","message":"For more information about an error, try `rustc --explain E0277`.","spans":[]}}
{"reason":"build-finished","success":false}
